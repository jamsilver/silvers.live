/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 3.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

   html {
    color: #222222;
    font-family: Arial, Helvetica, freesans, 'Open sans', sans-serif;
    font-size: 1.2em;
    line-height: 1.4;
  }

  /*
   * Remove text-shadow in selection highlight:
   * https://twitter.com/miketaylr/status/12228805301
   *
   * Customize the background color to match your design.
   */

  ::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
  }

  ::selection {
    background: #b3d4fc;
    text-shadow: none;
  }

  /*
   * A better looking default horizontal rule
   */

  hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
  }

  /*
   * Remove the gap between audio, canvas, iframes,
   * images, videos and the bottom of their containers:
   * https://github.com/h5bp/html5-boilerplate/issues/440
   */

  audio,
  canvas,
  iframe,
  img,
  svg,
  video {
    vertical-align: middle;
  }

  /*
   * Remove default fieldset styles.
   */

  fieldset {
    border: 0;
    margin: 0;
    padding: 0;
  }

  /*
   * Allow only vertical resizing of textareas.
   */

  textarea {
    resize: vertical;
  }

  /* ==========================================================================
     Author's custom styles
     ========================================================================== */




  /* ==========================================================================
     Helper classes
     ========================================================================== */

  /*
   * Hide visually and from screen readers
   */

  .hidden,
  [hidden] {
    display: none !important;
  }

  /*
   * Hide only visually, but have it available for screen readers:
   * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
   *
   * 1. For long content, line feeds are not interpreted as spaces and small width
   *    causes content to wrap 1 word per line:
   *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
   */

  .visually-hidden {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
    /* 1 */
  }

  /*
   * Extends the .visually-hidden class to allow the element
   * to be focusable when navigated to via the keyboard:
   * https://www.drupal.org/node/897638
   */

  .visually-hidden.focusable:active,
  .visually-hidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    white-space: inherit;
    width: auto;
  }

  /*
   * Hide visually and from screen readers, but maintain layout
   */

  .invisible {
    visibility: hidden;
  }

  /*
   * Clearfix: contain floats
   *
   * The use of `table` rather than `block` is only necessary if using
   * `::before` to contain the top-margins of child elements.
   */

  .clearfix::before,
  .clearfix::after {
    content: "";
    display: table;
  }

  .clearfix::after {
    clear: both;
  }

  /* Scrollbox.
   *
   * Add shadows to imply content is scrollable without using scroll-bars.
   */
  .scrollbox {
    scroll-behavior: smooth;
    background: /* Shadow covers */
    linear-gradient(white 30%, rgba(255, 255, 255, 0)), linear-gradient(rgba(255, 255, 255, 0), white 70%) 0 100%, /* Shadows */
    radial-gradient(50% 0, farthest-side, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)), radial-gradient(50% 100%, farthest-side, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 0 100%;
    background: /* Shadow covers */
    linear-gradient(white 30%, rgba(255, 255, 255, 0)), linear-gradient(rgba(255, 255, 255, 0), white 70%) 0 100%, /* Shadows */
    radial-gradient(farthest-side at 50% 0, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)), radial-gradient(farthest-side at 50% 100%, rgba(0, 0, 0, .2), rgba(0, 0, 0, 0)) 0 100%;
    background-repeat: no-repeat;
    background-color: white;
    background-size: 100% 40px, 100% 40px, 100% 14px, 100% 14px;
    /* Opera doesn't support this in the shorthand */
    background-attachment: local, local, scroll, scroll;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none;  /* Internet Explorer 10+ */
  }
  .scrollbox {
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none;  /* Internet Explorer 10+ */
  }
  .scrollbox::-webkit-scrollbar { /* WebKit */
    width: 0;
    height: 0;
  }

  /*
   * Wrap youtube embeds in this to stop them busting the max-width.
   */
  .embed-container {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%;
    height: auto;
  }
  .embed-container embed,
  .embed-container iframe,
  .embed-container object {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  /*
   * Logo background letters.
   */
   .letter-block {
     background: white;
     padding: 6px;
   text-transform: uppercase;font-size: 24px;margin: 0 3px;color: #f06315;width: 1em;display: inline-block;height: 1em;line-height: 1em;}

  /*
   * Fabulous <em>s.
   */
   :root {
    --color-1: #442288;
    --color-2: #6ca2ea;
    --color-3: #b5d33d;
    --color-4: #fed23f;
    --color-5: #eb7d5b;
    --angle: 0deg;
  }
   em.fabulous {
    color: #fff;
    font-size: 2em;
    font-weight: 900;
    position: relative;
    top: 0.15em;
    text-transform: uppercase;
    padding: 0 0.3em;
    background: linear-gradient(
      var(--angle),
      var(--color-1) 19%,
      transparent 19%,
      transparent 20%,
      var(--color-2) 20%,
      var(--color-2) 39%,
      transparent 39%,
      transparent 40%,
      var(--color-3) 40%,
      var(--color-3) 59%,
      transparent 59%,
      transparent 60%,
      var(--color-4) 60%,
      var(--color-4) 79%,
      transparent 79%,
      transparent 80%,
      var(--color-5) 80%
    );
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    animation: 10s rotate linear infinite;
   }
   @keyframes rotate {
     to {
       --angle: 360deg;
     }
   }
   @property --angle {
     syntax: "<angle>";
     initial-value: 0deg;
     inherits: false;
   }

  /**
   * Turn checkbox into a toggle switch.
   * @see https://www.w3schools.com/howto/howto_css_switch.asp.
   */
   .switch {
    position: relative;
    display: inline-block;
    width: 30px;
    height: 17px;
  }
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    -webkit-transition: .4s;
    transition: .4s;
    border-radius: 17px;
  }
  .slider:before {
    position: absolute;
    content: "";
    height: 13px;
    width: 13px;
    left: 2px;
    bottom: 2px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
    border-radius: 50%;
  }
  input:checked + .slider {
    background-color: #2196F3;
  }
  input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
  }
  input:checked + .slider:before {
    -webkit-transform: translateX(13px);
    -ms-transform: translateX(13px);
    transform: translateX(13px);
  }

  /*
   * Encryption form.
   */
  .encrypted {
    border: 3px solid #a1a1a1;
    border-radius: 3px;
    padding: 1em;
    text-align: center;
    color: #a1a1a1;
    text-transform: uppercase;
    font-size: small;
    font-weight: bold;
  }
  .encrypted::before {
    content: "ðŸ”’";
    filter: brightness(0.9) grayscale(100%);
    text-shadow: rgb(198, 227, 240) 0 0 10px;
    display: inline-block;
    font-size: xx-large;
    animation: spin-1 cubic-bezier(1, 0, 0, 1) 0.5s;
  }
  .encrypted:hover::before {
    animation: spin-2 cubic-bezier(1, 0, 0, 1) 0.5s;
  }
  @keyframes spin-1 {
    from {
      transform: scaleX(1);
    }
    25% {
      transform: scaleX(0);
    }
    50% {
      transform: scaleX(-1);
    }
    75% {
      transform: scaleX(0);
    }
    to {
      transform: scaleX(1);
    }
  }
  @keyframes spin-2 {
    from {
      transform: scaleX(1);
    }
    25% {
      transform: scaleX(0);
    }
    50% {
      transform: scaleX(-1);
    }
    75% {
      transform: scaleX(0);
    }
    to {
      transform: scaleX(1);
    }
  }
  @keyframes spin-big {
    from {
      transform: scale(3, 3);
    }
    50% {
      transform: scale(-3, 3);
    }
    to {
      transform: scale(3, 3);
    }
  }
  .encrypted button {
    display: block;
    margin: auto;
    margin-top: 1em;
  }
  .encrypted > * {
    opacity: 1;
    transition: opacity 0.1s linear;
  }
  .encrypted.decryption-processing > * {
    opacity: 0;
  }
  .encrypted.decryption-processing::before {
    animation: spin-big ease-in-out 3s infinite;
    transform-origin: top center;
  }
  .encrypted.decryption-fail {
    color: rgb(179, 15, 15);
    border-color:rgba(179, 15, 15);
  }
  .encrypted.decryption-fail::before {
    animation: none;
  }

  /*
   * Notice.
   */
  .notice {
    border: 3px solid #a1a1a1;
    border-radius: 3px;
    padding: 1em;
    text-align: center;
    color: #a1a1a1;
    text-transform: uppercase;
    font-size: small;
    font-weight: bold;
  }

  /* ==========================================================================
     EXAMPLE Media Queries for Responsive Design.
     These examples override the primary ('mobile first') styles.
     Modify as content requires.
     ========================================================================== */

  @media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
  }

  @media print,
    (-webkit-min-device-pixel-ratio: 1.25),
    (min-resolution: 1.25dppx),
    (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
  }

  /* ==========================================================================
     Print styles.
     Inlined to avoid the additional HTTP request:
     https://www.phpied.com/delay-loading-your-print-css/
     ========================================================================== */

  @media print {
    *,
    *::before,
    *::after {
      background: #fff !important;
      color: #000 !important;
      /* Black prints faster */
      box-shadow: none !important;
      text-shadow: none !important;
    }

    a,
    a:visited {
      text-decoration: underline;
    }

    a[href]::after {
      content: " (" attr(href) ")";
    }

    abbr[title]::after {
      content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
    a[href^="#"]::after,
    a[href^="javascript:"]::after {
      content: "";
    }

    pre {
      white-space: pre-wrap !important;
    }

    pre,
    blockquote {
      border: 1px solid #999;
      page-break-inside: avoid;
    }

    tr,
    img {
      page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
      orphans: 3;
      widows: 3;
    }

    h2,
    h3 {
      page-break-after: avoid;
    }
  }


header {background: #f06315;display: flex;flex-flow: column nowrap;}

body {display: flex;width: 100%;height: 100%;flex-flow: column nowrap;}

.header-top {display: flex;flex-flow: row nowrap;/* justify-content: stretch; */align-content: stretch;height: 50px;margin: 0.5em;}

a.avatar {flex-basis: content;}

.header-top > h1 {flex-basis: 100%;text-align: center;margin: 0;}

nav.menu {list-style-type: none;color: white;}

nav.menu ul {list-style-type: none;padding: 0;margin: 0;/* display: block; */}

nav.menu li a {color: white;text-decoration: none;padding: 0.25em 1em;display: inline-block;
    font-weight: bold;
    letter-spacing: 1px;}

nav.menu li a[aria-current="page"] {border-bottom: 3px solid white;}

nav.menu li {/* display: block; */position: relative;}

main {background: #fefefe;flex: 1;}

main {flex: 1;}